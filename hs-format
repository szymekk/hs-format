#!/bin/bash

usage () {
echo usage: "$0" "([--check] | [--force]) [--print-modified] [--with-ormolu PATH]"
echo Run ormolu formatter on Haskell files in a git repository, respecting
echo .gitignore rules.
echo
echo "  " "--check             display files that need formatting"
echo "  " "--force             format all files, even those already formatted"
echo "  " "--print-modified    print modified files"
echo "  " "--with-ormolu PATH  use ormolu found at PATH"
echo "  " "--help              display this help and exit"
}

check_only=
force=
print_modified=
ormolu_executable=ormolu

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    --help)
    usage
    exit
    ;;
    --check)
    check_only=1
    shift
    ;;
    --force)
    force=1
    shift
    ;;
    --print-modified)
    print_modified=1
    shift
    ;;
    --with-ormolu)
    ormolu_executable=$2
    shift 2
    ;;
    --with-ormolu=*)
    ormolu_executable=${1#*=}
    shift
    ;;
    *)
    echo "$0": unknown option: "$1"
    usage
    exit
    ;;
esac
done

if [[ -n $check_only && -n $force ]]; then
    echo "$0": --check cannot be used with --force
    usage
    exit
fi

run_ormolu () {
    files=("$@")
    if [ ${#files[@]} -eq 0 ]; then
        return
    fi

    printf '%s\0' "${files[@]}" |
    xargs -0 "$ormolu_executable" --mode=inplace
}

print_files_with_prefix_and_suffix () {
    prefix=$1
    suffix=$2
    shift 2
    files=("$@")
    for file in "${files[@]}"; do
        echo "$prefix""$file""$suffix"
    done
}

print_files_to_be_modified () {
    print_files_with_prefix_and_suffix \' "' will be modified" "$@"
}

print_files_unformatted () {
    print_files_with_prefix_and_suffix \' "' needs formatting" "$@"
}

extensions=(hs lhs)
git_flags=(--cached --others --exclude-standard)
patterns=( "${extensions[@]/#/*.}" )

get_source_files () {
    git ls-files -z "${git_flags[@]}" "${patterns[@]}"
}

readarray -d $'\0' source_files < <( get_source_files )
declare -a unformatted_files

if [[ -z $force ]]; then
    for file in "${source_files[@]}"; do
        if ! "$ormolu_executable" --mode=check "$file" ; then
            unformatted_files+=("$file")
        fi
    done
fi

if [[ -n $check_only ]]; then
    print_files_unformatted "${unformatted_files[@]}"
    exit
fi

if [[ -n $force ]]; then
    if [[ -n $print_modified ]]; then
        print_files_to_be_modified "${source_files[@]}"
    fi

    run_ormolu "${source_files[@]}"
    exit
fi

if [[ -n $print_modified ]]; then
    print_files_to_be_modified "${unformatted_files[@]}"
fi

run_ormolu "${unformatted_files[@]}"
